{
  "openapi": "3.0.0",
  "info": {
    "version": "0.0.1",
    "title": "Backend test"
  },
  "servers": [
    {
      "url": "https://localhost:8080/api/v1"
    }
  ],
  "paths": {
    "/persons": {
      "get": {
        "tags": [
          "Persone"
        ],
        "summary": "Возвращает массив объектов типа Person",
        "operationId": "getPersons",
        "responses": {
          "200": {
            "description": "Успешный ответ со списком всех сотрудников",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      },
      "post": {
        "tags": [
          "Persone"
        ],
        "summary": "Создаёт нового сотрудника в системе с указанными навыками",
        "operationId": "newPerson",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Person"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешный ответ с конкретным сотрудником",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      }
    },
    "/persons/{personId}": {
      "get": {
        "tags": [
          "Persone"
        ],
        "summary": "Возвращает объект типа Person по индетификатору",
        "operationId": "getPerson",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор сотрудника",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ с конкретным сотрудником",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "400": {
            "description": "Сотрудник не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      },
      "put": {
        "tags": [
          "Persone"
        ],
        "summary": "Обновляет объект типа Person по индетификатору",
        "operationId": "changePerson",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор сотрудника",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Person"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешного обновление",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "400": {
            "description": "Сотрудник не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      },
      "delete": {
        "tags": [
          "Persone"
        ],
        "summary": "Удаляет с указанным id сотрудника",
        "operationId": "removePerson",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Идентификатор сотрудника",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление"
          },
          "400": {
            "description": "Сотрудник не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Skill"
            }
          }
        }
      },
      "Skill": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "level": {
            "type": "integer",
            "format": "int8",
            "minimum": 1,
            "maximum": 10
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}